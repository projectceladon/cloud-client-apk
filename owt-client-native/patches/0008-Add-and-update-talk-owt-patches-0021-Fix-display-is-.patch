From 2a8359a04ae49e47560787524bbd10cd57d028c7 Mon Sep 17 00:00:00 2001
From: "Deng, Bing" <bing.deng@intel.com>
Date: Tue, 16 Nov 2021 16:24:51 +0800
Subject: [PATCH] Add and update
 talk/owt/patches/0021-Fix-display-is-incomplete.patch

Signed-off-by: Deng, Bing <bing.deng@intel.com>

fix Abnormal display after Start Aic on client apk
jira:ACP-1917

Signed-off-by: shipeigx <peigangx.shi@intel.com>
---
 scripts/prepare_dev.py                        |  3 +-
 .../0021-Fix-display-is-incomplete.patch      | 66 +++++++++++++++++++
 2 files changed, 68 insertions(+), 1 deletion(-)
 create mode 100644 talk/owt/patches/0021-Fix-display-is-incomplete.patch

diff --git a/scripts/prepare_dev.py b/scripts/prepare_dev.py
index b528654..e8438b5 100644
--- a/scripts/prepare_dev.py
+++ b/scripts/prepare_dev.py
@@ -43,7 +43,8 @@ patchList = [
     ('0013-Remove-unused-gni-for-av1-build.patch', THIRD_PARTY_PATH),
     ('0014-Fix-missing-ffmpeg-configure-item-for-msvc-build.patch', FFMPEG_PATH),
     ('0016-Use-AToU-to-print-trace.patch', WEBRTC_PATH),
-    ('0020-Add-atrace-points-for-camera-in-apk.patch', WEBRTC_PATH)
+    ('0020-Add-atrace-points-for-camera-in-apk.patch', WEBRTC_PATH),
+    ('0021-Fix-display-is-incomplete.patch', WEBRTC_PATH)
 ]
 
 def _patch(ignoreFailures=False):
diff --git a/talk/owt/patches/0021-Fix-display-is-incomplete.patch b/talk/owt/patches/0021-Fix-display-is-incomplete.patch
new file mode 100644
index 0000000..84640ba
--- /dev/null
+++ b/talk/owt/patches/0021-Fix-display-is-incomplete.patch
@@ -0,0 +1,66 @@
+From 44235f6a4ec19a0ad3a3c5649168b33e709d7638 Mon Sep 17 00:00:00 2001
+From: "Deng, Bing" <bing.deng@intel.com>
+Date: Tue, 16 Nov 2021 15:57:19 +0800
+Subject: [PATCH] Fix display is incomplete.
+
+1. if frameAspectRatio is different with layoutAspectRatio,
+adopt frameAspectRatio.
+2. Fix Abnormal display after Start Aic on client apk.
+
+Tracks-On: ACP-1817
+
+Signed-off-by: Deng, Bing <bing.deng@intel.com>
+Signed-off-by: shipeigx <peigangx.shi@intel.com>
+---
+ .../api/org/webrtc/SurfaceViewRenderer.java   | 21 +++++++++++++++----
+ 1 file changed, 17 insertions(+), 4 deletions(-)
+
+diff --git a/sdk/android/api/org/webrtc/SurfaceViewRenderer.java b/sdk/android/api/org/webrtc/SurfaceViewRenderer.java
+index f62d27432d..2b02b9e04a 100644
+--- a/sdk/android/api/org/webrtc/SurfaceViewRenderer.java
++++ b/sdk/android/api/org/webrtc/SurfaceViewRenderer.java
+@@ -198,7 +198,20 @@ public class SurfaceViewRenderer extends SurfaceView
+   @Override
+   protected void onLayout(boolean changed, int left, int top, int right, int bottom) {
+     ThreadUtils.checkIsOnMainThread();
+-    eglRenderer.setLayoutAspectRatio((right - left) / (float) (bottom - top));
++    float layoutAspectRatio = (right - left) / (float) (bottom - top);
++    float tmpRatio = layoutAspectRatio;
++    if (rotatedFrameHeight > 0) {
++      float frameAspectRatio = rotatedFrameWidth / (float) rotatedFrameHeight;
++      if (Math.abs(layoutAspectRatio - frameAspectRatio) > 0) {
++        tmpRatio = frameAspectRatio;
++        logD("Set eglRenderer layout aspect ratio with frameAspectRatio = " + rotatedFrameWidth + " / "
++            + rotatedFrameHeight + " = " + tmpRatio);
++      } else {
++        logD("Set eglRenderer layout aspect ratio with layoutAspectRatio = " + (right - left) + " / " + (bottom - top)
++            + " = " + tmpRatio);
++      }
++    }
++    eglRenderer.setLayoutAspectRatio(tmpRatio);
+     updateSurfaceSize();
+   }
+ 
+@@ -272,9 +285,6 @@ public class SurfaceViewRenderer extends SurfaceView
+ 
+   @Override
+   public void onFrameResolutionChanged(int videoWidth, int videoHeight, int rotation) {
+-    if (rendererEvents != null) {
+-      rendererEvents.onFrameResolutionChanged(videoWidth, videoHeight, rotation);
+-    }
+     int rotatedWidth = rotation == 0 || rotation == 180 ? videoWidth : videoHeight;
+     int rotatedHeight = rotation == 0 || rotation == 180 ? videoHeight : videoWidth;
+     // run immediately if possible for ui thread tests
+@@ -283,6 +293,9 @@ public class SurfaceViewRenderer extends SurfaceView
+       rotatedFrameHeight = rotatedHeight;
+       updateSurfaceSize();
+       requestLayout();
++      if (rendererEvents != null) {
++        rendererEvents.onFrameResolutionChanged(videoWidth, videoHeight, rotation);
++      }
+     });
+   }
+ 
+-- 
+2.25.1
+
-- 
2.25.1

